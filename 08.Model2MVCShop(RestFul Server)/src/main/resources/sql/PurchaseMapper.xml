<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	UserMapper.xml :: SQL 를 갖는 MetaData 
	
	- MyBatis Framework 은 XML MetaData 를 사용 SQL구문을 관리
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->		
 					
<mapper namespace="PurchaseMapper">

	<!-- 위의  namespace 이용 Application 에서 UserMapper.~~ 로 아래의 SQL 을 참조  
	 	  :: 아래의 query 수행 후 결과 resultType 에 선언된 User Domain Object 
	 	   	  Field ( property )에 자동연결(?,바인딩)
	 	  :: SQL / Query 의 Alias 와 User Domain Object 의 Field 이름 동일한 것 확인.  -->
	 	  

	<resultMap type="com.model2.mvc.service.domain.Purchase" id="purchaseSelectMap">
		<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="paymentOption" column="payment_option" jdbcType="CHAR"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/>
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
		<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR"/>
		<result property="orderDate" column="order_date" jdbcType="DATE"/>
		<result property="divyDate" column="dlvy_date" jdbcType="VARCHAR"/>
		<result property="buyer.userId" column="buyer_id" jdbcType="VARCHAR"/>
		<result property="purchaseProd.prodNo" column="prod_no" jdbcType="VARCHAR"/>
		
		<!-- <association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
			<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
			<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
			<result property="price" column="price" jdbcType="NUMERIC"/>
			<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
			<result property="regDate" column="prod_reg_date" jdbcType="DATE"/>
			<result property="proTranCode" column="TRAN_STATUS_CODE" jdbcType="VARCHAR"/>
		</association>
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
			<result property="userName" column="user_name" jdbcType="VARCHAR"/>
			<result property="password" column="password" jdbcType="VARCHAR"/>
			<result property="role" column="role" jdbcType="VARCHAR"/>
			<result property="ssn" column="ssn" jdbcType="VARCHAR"/>
			<result property="phone" column="cell_phone" jdbcType="VARCHAR"/>
			<result property="addr" column="addr" jdbcType="VARCHAR"/>
			<result property="email" column="email" jdbcType="VARCHAR"/>
			<result property="regDate" column="user_reg_date" jdbcType="DATE"/>
		</association> -->
	</resultMap>
	
  
	 	  
	 	  
	 	  <insert id="addPurchase" parameterType="purchase">
		INSERT 
		INTO transaction(tran_no, prod_no, buyer_id, payment_option, receiver_name, 
		receiver_phone, demailaddr, dlvy_request, tran_status_code, order_date, dlvy_date)
		VALUES (
					seq_transaction_tran_no.NEXTVAL,
					#{purchaseProd.prodNo:NUMERIC},
					#{buyer.userId:VARCHAR},
					#{paymentOption:CHAR},
					#{receiverName:VARCHAR},
					#{receiverPhone:VARCHAR},
					#{divyAddr:VARCHAR},
					#{divyRequest:VARCHAR},
					#{tranCode:VARCHAR},
					SYSDATE,
					#{divyDate:DATE} )
	</insert>	
  
  	
       

  	  <select id="getPurchase" parameterType="int" resultMap="purchaseSelectMap">
  	    SELECT  t. tran_no, p.prod_no, t.buyer_id, t.payment_option,t. receiver_name, 
		t.receiver_phone, t.demailaddr, t.dlvy_request,t.order_date,t. tran_status_code

		FROM transaction t, product p
		WHERE t.prod_no=p.prod_no
		AND t.tran_no = #{tranNo}

					
       </select>
 
  	
  
  	
  <update id="updatePurchase" parameterType="purchase" >
  	UPDATE transaction
  	<set>
  	payment_option=#{paymentOption},
    receiver_name=#{receiverName},
    receiver_phone=#{receiverPhone},
  	demailaddr=#{divyAddr},
  	dlvy_request=#{divyRequest}, 
  	dlvy_date=#{divyDate}                
  	</set>
  	WHERE tran_no=#{tranNo}
  	</update>
  	
<update id="updateTranCode" parameterType="com.model2.mvc.service.domain.Purchase">
UPDATE transaction
<set>
tran_status_code=#{tranCode}
</set>
WHERE prod_no=#{purchaseProd.prodNo}
</update>
   	
 <!-- <select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT t.tran_no, t.buyer_id, t.receiver_name, t.receiver_phone, t.tran_status_code
										FROM transaction t, product p, users u 
										
										
										
										WHERE
										 t.buyer_id = u.user_id 
										AND t.buyer_id= #{buyerId}
										
										ORDER BY t.tran_no  ) inner_table
										
  						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
</select> 
map은 search랑 buyerId가 있으므로 endRownum은 찾을 수가 없다.따라서 search라는 경로를 지정해줘야 한다
 -->

<!--   <select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT t.tran_no, t.prod_no, t.order_date, t.tran_status_code 
										FROM transaction t 
										AND t.buyer_id = #{buyerId}
										ORDER BY tran_no  ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}

</select>  -->

<!-- 	<select  id="getPurchaseList"  parameterType="map" resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT tran_no, prod_no, tran_status_code, buyer_id
											FROM transaction
											<if test="buyerId != null">
												<where>
													buyer_id=#{buyerId}
												</where>
											</if>
											ORDER BY tran_no DESC ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
 -->
<select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT t.tran_no, p.prod_no, t.buyer_id , t.receiver_name, t.receiver_phone, t.order_date, t.tran_status_code
										FROM transaction t, product p, users u 
										WHERE t.prod_no = p.prod_no 
										AND t.buyer_id=u.user_id
										AND u.user_id  = #{buyerId}
										ORDER BY tran_no  ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
</select>


 <!--element 는 " "   -->
 
<select id="getTotalCount" parameterType="string" resultType="int">
<!--resultType int로 결과값을 받는다는 의미 콘솔에 sql쓰면 숫자로 결과가 나옴  -->
<!--파라미터 타입이 string으로 받으면 value로 해야 받을 수 있음  -->
  SELECT COUNT(*) <!-- 조회하려는 데이터수 --> 
  FROM (
 SELECT t.tran_no, t.prod_no, t.buyer_id, t.receiver_name, t.receiver_phone,t.order_date,t.tran_status_code 
									   FROM transaction t<!-- , product p, users u  -->
				<!--p.prod_no를 안해도 되는 이유가  transaction에 컬럼이 지정되 있기 때문 -->						
									  <!--  WHERE t.prod_no = p.prod_no 
										AND t.buyer_id=u.user_id
										AND u.user_id = #{value}   -->
		
 		) countTable
 </select>  
 
<!--  <select  id="getTotalCount"  parameterType="com.model2.mvc.common.Search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT tran_no, prod_no, receiver_name,  receiver_phone, tran_status_code
				FROM transaction ) countTable						
	 </select> -->
 
<!--  <select  id="getTranCode"  parameterType="int"	 resultType="string">
	  	SELECT tran_status_code
	  	FROM transaction WHERE prod_no = #{value}						
	 </select>
 -->





</mapper>
  	
 	